### This file was generated by Nexus Schema
### Do not make changes to this file directly


type Emote {
  count: Int!
  gif: String!
  id: Int!
  name: String!
}

input EmoteCreateInput {
  count: Int
  gif: String
  name: String!
}

input EmoteUpdateInput {
  count: IntFieldUpdateOperationsInput
  gif: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input EmoteWhereUniqueInput {
  id: Int
  name: String
}

input IntFieldUpdateOperationsInput {
  decrement: Int
  divide: Int
  increment: Int
  multiply: Int
  set: Int
}

type Mutation {
  createOneEmote(data: EmoteCreateInput!): Emote!
  deleteOneEmote(where: EmoteWhereUniqueInput!): Emote
  incrementOneEmote(gif: String!, name: String!): Emote
  updateOneEmote(data: EmoteUpdateInput!, where: EmoteWhereUniqueInput!): Emote
}

type Query {
  emote(where: EmoteWhereUniqueInput!): Emote
  emotes(after: EmoteWhereUniqueInput, before: EmoteWhereUniqueInput, first: Int, last: Int): [Emote!]!
}

input StringFieldUpdateOperationsInput {
  set: String
}
